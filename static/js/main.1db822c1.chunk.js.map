{"version":3,"sources":["api.ts","App.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterBy","getUser","userId","TodoList","isLoaded","setIsLoaded","setCurrentUserId","setCurrentTodo","filterCallback","useState","visibleTodos","setVisibleTodos","useEffect","todos","className","filter","map","visibleTodo","id","completed","classNames","title","type","onClick","TodoFilter","setFilterTodoBy","filterTodoBy","setSearchQuery","searchQuery","value","onChange","event","target","ACTIVE","COMPLETED","ALL","placeholder","currentTarget","QUERY","style","pointerEvents","Loader","TodoModal","currentUserId","currentTodo","name","email","phone","currentUser","setCurrentUser","modalIsLoaded","setModalIsLoaded","user","a","curUser","href","App","todoIsLoaded","setTodoisLoaded","todo","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1db822c1.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\n// eslint-disable-next-line import/no-cycle\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getUser } from './api';\nimport { Todo } from './types/Todo';\n\nexport enum FilterBy {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n  QUERY = 'byQuery',\n}\n\nexport const App: React.FC = () => {\n  const [todoIsLoaded, setTodoisLoaded] = useState(false);\n  const [currentUserId, setCurrentUserId] = useState(0);\n  const [currentTodo, setCurrentTodo] = useState<Todo>({\n    id: 0,\n    title: '',\n    completed: false,\n    userId: 0,\n  });\n  const [filterTodoBy, setFilterTodoBy] = useState(FilterBy.ALL);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filterCallback = () => {\n    switch (filterTodoBy) {\n      case FilterBy.ACTIVE:\n        return (todo: Todo) => !todo.completed;\n\n      case FilterBy.COMPLETED:\n        return (todo: Todo) => todo.completed;\n\n      case FilterBy.QUERY:\n        return (todo: Todo) => todo.title.includes(searchQuery);\n\n      default:\n        return (todo: Todo) => todo.id !== 0;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterTodoBy={setFilterTodoBy}\n                filterTodoBy={filterTodoBy}\n                setSearchQuery={setSearchQuery}\n                searchQuery={searchQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todoIsLoaded && <Loader />}\n              <TodoList\n                isLoaded={todoIsLoaded}\n                setIsLoaded={setTodoisLoaded}\n                setCurrentUserId={setCurrentUserId}\n                setCurrentTodo={setCurrentTodo}\n                filterCallback={filterCallback()}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo.id !== 0\n        && (\n          <TodoModal\n            currentUserId={currentUserId}\n            getUser={getUser}\n            currentTodo={currentTodo}\n            setCurrentTodo={setCurrentTodo}\n          />\n        )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { getTodos } from '../../api';\n\ninterface Props {\n  isLoaded: boolean,\n  setIsLoaded: React.Dispatch<React.SetStateAction<boolean>>,\n  setCurrentUserId: React.Dispatch<React.SetStateAction<number>>,\n  setCurrentTodo: React.Dispatch<React.SetStateAction<Todo>>,\n  filterCallback: (todo: Todo) => boolean,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  isLoaded,\n  setIsLoaded,\n  setCurrentUserId,\n  setCurrentTodo,\n  filterCallback,\n}) => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getTodos().then(todos => setVisibleTodos(todos));\n    setIsLoaded(true);\n  }, []);\n\n  return (\n    <>\n      {isLoaded && (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {visibleTodos.filter(filterCallback).map(visibleTodo => (\n              <tr\n                data-cy=\"todo\"\n                className=\"has-background-info-light\"\n                key={visibleTodo.id}\n              >\n                <td className=\"is-vcentered\">{visibleTodo.id}</td>\n                <td className=\"is-vcentered\">\n                  {visibleTodo.completed\n                    ? (<i className=\"fas fa-check\" />) : ''}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={classNames({\n                      'has-text-danger': !visibleTodo.completed,\n                      'has-text-success': visibleTodo.completed,\n                    })}\n                  >\n                    {visibleTodo.title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      setCurrentUserId(visibleTodo.userId);\n                      setCurrentTodo(visibleTodo);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","/* eslint-disable import/no-cycle */\nimport React, { ChangeEvent } from 'react';\nimport { FilterBy } from '../../App';\n\ninterface Props {\n  setFilterTodoBy: React.Dispatch<React.SetStateAction<FilterBy>>,\n  filterTodoBy: FilterBy,\n  setSearchQuery: React.Dispatch<React.SetStateAction<string>>,\n  searchQuery: string,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilterTodoBy, filterTodoBy, setSearchQuery, searchQuery,\n}) => {\n  const handleColorChange\n  = (event: ChangeEvent<HTMLSelectElement>) => {\n    const filterType = event.target.value;\n\n    switch (filterType) {\n      case FilterBy.ACTIVE:\n        setFilterTodoBy(FilterBy.ACTIVE);\n        break;\n\n      case FilterBy.COMPLETED:\n        setFilterTodoBy(FilterBy.COMPLETED);\n        break;\n\n      default:\n        setFilterTodoBy(FilterBy.ALL);\n        break;\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterTodoBy}\n            onChange={handleColorChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={(event) => {\n            setSearchQuery(event.currentTarget.value);\n            setFilterTodoBy(FilterBy.QUERY);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setSearchQuery('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  currentUserId: number,\n  getUser: (userId: number) => Promise<User>\n  currentTodo: Todo,\n  setCurrentTodo: React.Dispatch<React.SetStateAction<Todo>>,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  currentUserId, getUser, currentTodo, setCurrentTodo,\n}) => {\n  const [currentUser, setCurrentUser] = useState<User>({\n    id: 0,\n    name: '',\n    email: '',\n    phone: '',\n  });\n  const [modalIsLoaded, setModalIsLoaded] = useState(false);\n  const user = async () => {\n    const curUser = await getUser(currentUserId);\n\n    setCurrentUser(curUser);\n\n    setModalIsLoaded(true);\n  };\n\n  if (currentUserId !== currentUser.id) {\n    user();\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!modalIsLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setCurrentTodo({\n                id: 0,\n                title: '',\n                completed: false,\n                userId: 0,\n              })}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">Planned</strong>\n\n              {' by '}\n\n              <a href={`mailto:${currentUser.email}`}>\n                {currentUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}